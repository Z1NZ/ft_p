sofiane
D System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.END(2)                     BSD System Calls Manual                    SEND(2)

NAME
     send, sendmsg, sendto -- send a message from a socket

SYNOPSIS
     #include <sys/socket.h>

     ssize_t
     send(int socket, const void *buffer, size_t length, int flags);

     ssize_t
     sendmsg(int socket, const struct msghdr *message, int flags);

     ssize_t
     sendto(int socket, const void *buffer, size_t length, int flags, const struct sockaddr *dest_addr,
         socklen_t dest_len);

DESCRIPTION
     Send(), sendto(), and sendmsg() are used to transmit a message to another socket.  Send() may be used only
     when the socket is in a connected state, while sendto() and sendmsg() may be used at any time.

     The address of the target is given by dest_addr with dest_len specifying its size.  The length of the mes-
     sage is given by length.  If the message is too long to pass atomically through the underlying protocol,
     the error EMSGSIZE is returned, and the message is not transmitted.
-- MOST: *stdin*                                                                                                 (1,1) 0%
Press `Q' to quit, `H' for help, and SPACE to scroll.
sofiane
